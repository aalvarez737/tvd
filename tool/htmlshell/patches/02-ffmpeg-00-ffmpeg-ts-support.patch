--- media/base/audio_decoder_config.cc.orig 	2015-07-03 08:41:44.892885543 +0000
+++ media/base/audio_decoder_config.cc 	2015-07-03 08:41:44.892885543 +0000
@@ -44,6 +44,10 @@ std::string GetCodecName(AudioCodec codec) {
       return "alac";
     case kCodecAC3:
       return "ac3";
+    case kCodecAAC_LATM:
+      return "aac_latm";
+    case kCodecDTS:
+      return "dts";
   }
   NOTREACHED();
   return "";
--- media/base/audio_decoder_config.h.orig 	2015-07-03 08:41:44.892885543 +0000
+++ media/base/audio_decoder_config.h 	2015-07-03 08:41:44.892885543 +0000
@@ -40,13 +40,15 @@ enum AudioCodec {
   kCodecPCM_ALAW = 14,
   kCodecALAC = 15,
   kCodecAC3 = 16,
+  kCodecDTS = 17,
+  kCodecAAC_LATM = 18,
   // DO NOT ADD RANDOM AUDIO CODECS!
   //
   // The only acceptable time to add a new codec is if there is production code
   // that uses said codec in the same CL.

   // Must always be equal to the largest entry ever logged.
-  kAudioCodecMax = kCodecAC3,
+  kAudioCodecMax = kCodecAAC_LATM,
 };

 std::string MEDIA_EXPORT GetCodecName(AudioCodec codec);
--- media/ffmpeg/ffmpeg_common.cc.orig 	2015-07-03 08:41:44.892885543 +0000
+++ media/ffmpeg/ffmpeg_common.cc 	2015-07-03 08:41:44.892885543 +0000
@@ -68,6 +68,10 @@ static AudioCodec CodecIDToAudioCodec(AVCodecID codec_id) {
   switch (codec_id) {
     case AV_CODEC_ID_AAC:
       return kCodecAAC;
+    case AV_CODEC_ID_AAC_LATM:
+      return kCodecAAC_LATM;
+    case AV_CODEC_ID_DTS:
+      return kCodecDTS;
 #if BUILDFLAG(ENABLE_AC3_EAC3_AUDIO_DEMUXING)
     case AV_CODEC_ID_AC3:
       return kCodecAC3;
@@ -105,7 +109,7 @@ static AudioCodec CodecIDToAudioCodec(AVCodecID codec_id) {
     case AV_CODEC_ID_ALAC:
       return kCodecALAC;
     default:
-      DVLOG(1) << "Unknown audio CodecID: " << codec_id;
+      LOG(WARNING) << "Unknown audio CodecID: " << codec_id;
   }
   return kUnknownAudioCodec;
 }
@@ -115,6 +119,14 @@ static AVCodecID AudioCodecToCodecID(AudioCodec audio_codec,
   switch (audio_codec) {
     case kCodecAAC:
       return AV_CODEC_ID_AAC;
+    case kCodecAAC_LATM:
+      return AV_CODEC_ID_AAC_LATM;
+    case kCodecAC3:
+      return AV_CODEC_ID_AC3;
+    case kCodecEAC3:
+      return AV_CODEC_ID_EAC3;
+    case kCodecDTS:
+      return AV_CODEC_ID_DTS;
     case kCodecALAC:
       return AV_CODEC_ID_ALAC;
     case kCodecMP3:
@@ -156,7 +168,7 @@ static AVCodecID AudioCodecToCodecID(AudioCodec audio_codec,
     case kCodecOpus:
       return AV_CODEC_ID_OPUS;
     default:
-      DVLOG(1) << "Unknown AudioCodec: " << audio_codec;
+      LOG(WARNING) << "Unknown AudioCodec: " << audio_codec;
   }
   return AV_CODEC_ID_NONE;
 }
--- media/media.gyp.orig
+++ media/media.gyp
@@ -33,7 +33,7 @@
       }, {
         'use_low_memory_buffer%': 0,
       }],
-      ['proprietary_codecs==1 and chromecast==1', {
+      ['proprietary_codecs==1', {
         # Enable AC3/EAC3 audio demuxing. Actual decoding must be provided by
         # the platform (or HDMI sink in Chromecast for audio pass-through case).
         'enable_ac3_eac3_audio_demuxing%': 1,
--- media/filters/ffmpeg_demuxer.cc.orig 	2015-07-03 08:41:44.892885543 +0000
+++ media/filters/ffmpeg_demuxer.cc 	2015-07-03 08:41:44.892885543 +0000
@@ -1242,6 +1242,10 @@ void FFmpegDemuxer::OnFindStreamInfoDone(const PipelineStatusCB& status_cb,
   if (!timeline_offset_.is_null() && start_time_ < base::TimeDelta())
     timeline_offset_ += start_time_;

+  if (strcmp(format_context->iformat->name, "mpegts") == 0) {
+    max_duration = kInfiniteDuration();
+  }
+
   if (max_duration == kInfiniteDuration() && !timeline_offset_.is_null()) {
     SetLiveness(DemuxerStream::LIVENESS_LIVE);
   } else if (max_duration != kInfiniteDuration()) {
--- third_party/ffmpeg/chromium/scripts/build_ffmpeg.py.orig
+++ third_party/ffmpeg/chromium/scripts/build_ffmpeg.py
@@ -531,9 +531,9 @@ def main(argv):

   # Google Chrome & ChromeOS specific configuration.
   configure_flags['Chrome'].extend([
-      '--enable-decoder=aac,h264,mp3',
-      '--enable-demuxer=aac,mp3,mov',
-      '--enable-parser=aac,h264,mpegaudio',
+      '--enable-decoder=dca,aac,h264,mp3,aac_latm,mpegts,ac3,eac3,ac3_fixed',
+      '--enable-demuxer=dca,aac,mp3,mov,aac_latm,mpegts,ac3,eac3,ac3_fixed',
+      '--enable-parser=dca,aac,h264,mpegaudio,aac_latm,mpegts,ac3,eac3,ac3_fixed'
   ])

   # ChromiumOS specific configuration.
