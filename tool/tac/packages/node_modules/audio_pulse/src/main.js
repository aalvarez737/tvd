'use strict';

var assert = require('assert');
var childp = require('child_process');
var tvdutil = require('tvdutil');

function pactl( args, cb ) {
	var proc = childp.spawn('pactl', args);

	proc.on('error', function(err) {
		log.error( 'Audio', 'Fail to execute pactl command! error=%s', err.message );
		cb(err);
	});

	proc.on('close', function (exitCode) {
		var err;
		if (exitCode) {
			err = new Error( 'Unknown error');
		}
		cb(err);
	});
}

function emulateVol(vol) {
	return ""+Math.floor(-0.005127707476 * Math.pow(vol,2) + 1.672824315 * vol + 13.82957457)+"%";
}

function AudioService(sink,realVol) {
	assert( tvdutil.isFile('/usr/bin/pactl') );

	if (sink === undefined) {
		sink = 0;
	}

	if (!realVol) {
		realVol = emulateVol;
	}

	var self = {};
	var unmutedVolume = realVol(50);

	self.name = function() {
		return 'Pulse';
	};

	self.setVolume = function( vol, cb ) {
		unmutedVolume = realVol(vol);
		pactl(['set-sink-volume', sink, unmutedVolume], cb );
	};

	self.mute = function( needMute, cb ) {
		pactl(['set-sink-volume', sink,  needMute ? '0%' : unmutedVolume], cb);
	};

	return Object.freeze(self);
}

module.exports = AudioService;
