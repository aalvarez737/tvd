# This one is important
SET(CMAKE_SYSTEM_NAME Linux)
# This one not so much
SET(CMAKE_SYSTEM_VERSION 1)

# Setup depot name
SET(TVD_DEPOT_NAME $ENV{TVD_DEPOT_NAME})
IF(NOT TVD_DEPOT_NAME)
	SET(TVD_DEPOT_NAME "GENERIC")
ENDIF(NOT TVD_DEPOT_NAME)

# Specify the cross compiler
SET(TVD_DEPOT_TOOLCHAIN_PATH $ENV{TVD_DEPOT_TOOLCHAIN_PATH})
IF(NOT TVD_DEPOT_TOOLCHAIN_PATH)
	MESSAGE(FATAL_ERROR "TVD_DEPOT_TOOLCHAIN_PATH should be the path to the toolchain directory.")
ENDIF(NOT TVD_DEPOT_TOOLCHAIN_PATH)

SET(TVD_DEPOT_SYSROOT $ENV{TVD_DEPOT_SYSROOT})
IF(NOT TVD_DEPOT_SYSROOT)
	MESSAGE(FATAL_ERROR "TVD_DEPOT_SYSROOT should be the path to the staging directory.")
ENDIF(NOT TVD_DEPOT_SYSROOT)

# Setup toolchain
SET(TVD_DEPOT_TOOLCHAIN_PREFIX $ENV{TVD_DEPOT_TOOLCHAIN_PREFIX})
IF(NOT TVD_DEPOT_TOOLCHAIN_PREFIX)
	set(TVD_DEPOT_TOOLCHAIN_PREFIX arm-linux-gnueabihf)
ENDIF(NOT TVD_DEPOT_TOOLCHAIN_PREFIX)
SET(CMAKE_C_COMPILER   ${TVD_DEPOT_TOOLCHAIN_PATH}/${TVD_DEPOT_TOOLCHAIN_PREFIX}gcc )
SET(CMAKE_CXX_COMPILER ${TVD_DEPOT_TOOLCHAIN_PATH}/${TVD_DEPOT_TOOLCHAIN_PREFIX}g++ )
SET(STRIP_TOOL         ${TVD_DEPOT_TOOLCHAIN_PATH}/${TVD_DEPOT_TOOLCHAIN_PREFIX}strip )

# Where is the target environment
SET(PLATFORM_FIND_ROOT_PATH ${TVD_DEPOT_SYSROOT} )

# Search for programs in the build host directories
SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)

# For libraries and headers in the target directories
SET(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
SET(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
